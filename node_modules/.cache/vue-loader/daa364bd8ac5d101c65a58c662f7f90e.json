{"remainingRequest":"/Users/rizkyputra531/Developer/shayna/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/rizkyputra531/Developer/shayna/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/rizkyputra531/Developer/shayna/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/rizkyputra531/Developer/shayna/src/views/ShoppingCart.vue?vue&type=template&id=0a4f6c3c&scoped=true&","dependencies":[{"path":"/Users/rizkyputra531/Developer/shayna/src/views/ShoppingCart.vue","mtime":1605255695629},{"path":"/Users/rizkyputra531/Developer/shayna/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rizkyputra531/Developer/shayna/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/rizkyputra531/Developer/shayna/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/rizkyputra531/Developer/shayna/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}